apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterworkspacetypes.tenancy.kcp.dev
spec:
  group: tenancy.kcp.dev
  names:
    categories:
    - kcp
    kind: ClusterWorkspaceType
    listKind: ClusterWorkspaceTypeList
    plural: clusterworkspacetypes
    singular: clusterworkspacetype
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterWorkspaceType specifies behaviour of workspaces of this
          type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            properties:
              name:
                maxLength: 63
                minLength: 1
                not:
                  enum:
                  - root
                  - system
                  - any
                pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
                type: string
            type: object
          spec:
            properties:
              additionalWorkspaceLabels:
                additionalProperties:
                  type: string
                description: additionalWorkspaceLabels are a set of labels that will
                  be added to a ClusterWorkspace on creation.
                type: object
              allowedChildWorkspaceTypes:
                default: []
                description: "allowedChildWorkspaceTypes is a list of ClusterWorkspaceTypes
                  that can be created in a workspace of this type. \n By default,
                  no type is allowed. This means no other workspace can be nested
                  within a workspace of the given type. The name `*` allows any child
                  type to be nested."
                items:
                  description: ClusterWorkspaceTypeName is a name of a ClusterWorkspaceType
                  pattern: ^[a-zA-Z][a-zA-Z0-9]+$
                  type: string
                type: array
              allowedParentWorkspaceTypes:
                description: "allowedParentWorkspaceTypes is a list of ClusterWorkspaceTypes
                  that this type can be created in. \n By default, no type is allowed.
                  This means no other workspace can have a workspace of the given
                  type nested inside it. The name `*` allows any parent type to nest
                  this one."
                items:
                  description: ClusterWorkspaceTypeName is a name of a ClusterWorkspaceType
                  pattern: ^[a-zA-Z][a-zA-Z0-9]+$
                  type: string
                minItems: 1
                type: array
              defaultChildWorkspaceType:
                description: defaultChildWorkspaceType is the ClusterWorkspaceType
                  that will be used by default if another, nested ClusterWorkspace
                  is created in a workspace of this type. When this field is unset,
                  the user must specify a type when creating nested workspaces.
                pattern: ^[a-zA-Z][a-zA-Z0-9]+$
                type: string
              initializer:
                description: "initializer determines if this ClusterWorkspaceType
                  has an associated initializing controller. These controllers are
                  used to add functionality to a ClusterWorkspace; all controllers
                  must finish their work before the ClusterWorkspace becomes ready
                  for use. \n One initializing controller is supported per ClusterWorkspaceType;
                  the identifier for this initializer will be a colon-delimited string
                  using the workspace in which the ClusterWorkspaceType is defined,
                  and the type's name. For example, if a ClusterWorkspaceType `example`
                  is created in the `root:org` workspace, the implicit initializer
                  name is `root:org:example`."
                type: boolean
            type: object
          status:
            description: ClusterWorkspaceTypeStatus defines the observed state of
              ClusterWorkspaceType.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIExport.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              virtualWorkspaces:
                description: virtualWorkspaces contains all APIExport virtual workspace
                  URLs.
                items:
                  properties:
                    url:
                      description: url is a ClusterWorkspaceType initialization virtual
                        workspace URL.
                      minLength: 1
                      type: string
                  required:
                  - url
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
